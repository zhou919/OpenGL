#include <gl/glut.h>
#include<math.h>

#define Pi 3.1415926
float angle=0;
float angle1=0;
const int n=50;
const float R=0.2;

void init(void) 
{
	glClearColor(1.0, 1.0, 0.0, 0.0);//设置背景颜色
	glShadeModel(GL_SMOOTH);//设置明暗处理,有两种选择模式：GL_FLAT（不渐变）和GL_SMOOTH（渐变过渡）
}

void display(void)
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);  //清空颜色缓冲区
	glLoadIdentity();   //清空矩阵
	
	glTranslatef(angle,0,0);//控制整个图形平移

	glPushMatrix();//画矩形
	glTranslatef(0,0,-10);
	glScalef(2,2,2);
	glColor3f(1.0,0.0,0.0);

	glBegin(GL_QUADS);
	glVertex2d(1,1);
	glVertex2d(-1,1);
	glVertex2d(-1,0);
	glVertex2d(1,0);
	glEnd();
	glPopMatrix();

	glPushMatrix();//画圆
	int i;
	glTranslatef(1.2, -0.3, -10);
	glRotatef(angle1,0,1,0);//绕y轴

	glBegin(GL_POLYGON); 
	glColor3f(1.0,0.0,0.0);
	for(i=0;i<n;i++)
	{
		glVertex2f(R*cos(2*Pi/n*i),R*sin(2*Pi/n*i));
	}
	glEnd();
	glPopMatrix();


	glPushMatrix();
	glTranslatef(-1.2, -0.3, -10);
	glRotatef(angle1,0,0,-1);//绕z轴
	glBegin(GL_POLYGON); 
	glColor3f(1.0,0.0,0.0);
	for(i=0;i<n;i++)
	{
		glVertex2f(R*cos(2*Pi/n*i),R*sin(2*Pi/n*i));

	}
	glEnd();
	glPopMatrix();

    glFlush();
}


void TimerFunction(int value)
{
    angle+=1;
	if(angle==10)
		angle=-10;
	
	angle1+=10;
	if(angle1==360)
		angle1=0;

    glutPostRedisplay();
	glutTimerFunc(500,TimerFunction, 1);
}

//在窗口改变大小时调用
void reshape(int w, int h){
	glViewport(0, 0, w, h);//设置视口
	glMatrixMode(GL_PROJECTION);//设置当前为投影变换模式
	glLoadIdentity();//用单位矩阵替换当前变换矩阵
	gluPerspective(45, (float)w/h, 4, 100.0);//设置正交投影视图体
	glMatrixMode (GL_MODELVIEW);
	glLoadIdentity();
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);//初始化glut
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);//设置为单缓存，RGB模式
	glutInitWindowSize(400, 400); //设置窗口大小
	glutInitWindowPosition(0, 0);//设置窗口起始位置
	glutCreateWindow("基本图形");//设置窗口标题
	init();//初始化OpenGL
	glutDisplayFunc(display);//设置显示回调函数 
	glutReshapeFunc(reshape);//设置reshape回调函数

	glutTimerFunc(500,TimerFunction, 1);
	glutMainLoop();//进入主循环
	return 0;
}
